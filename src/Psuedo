class MyComponent extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      error: null,
      isLoaded: false,
      items: []
    };
  }

  componentDidMount() {
    fetch("https://api.example.com/items")
      .then(res => res.json())
      .then(
        (result) => {
          this.setState({
            isLoaded: true,
            items: result.items
          });
        },
        // Note: it's important to handle errors here
        // instead of a catch() block so that we don't swallow
        // exceptions from actual bugs in components.
        (error) => {
          this.setState({
            isLoaded: true,
            error
          });
        }
      )
  }

  render() {
    const { error, isLoaded, items } = this.state;
    if (error) {
      return <div>Error: {error.message}</div>;
    } else if (!isLoaded) {
      return <div>Loading...</div>;
    } else {
      return (
        <ul>
          {items.map(item => (
            <li key={item.name}>
              {item.name} {item.price}
            </li>
          ))}
        </ul>
      );
    }
  }
}




class Tops extends React.Component{
    constructor() {
        super()
        this.state = {advice:""};
      }
    
  

  componentDidMount(){
    this.fetchTops();
  }
  
  fetch =()=>{
    axios.get('https://api.adviceslip.com/advice')
    .then((response) =>{
      const {advice} = response.data.slip;
this.setState({advice})
    })
    
    
     .catch((error) =>{
      console.log(error);

    });    

  }
  
  render(){
    const{advice} = this.state
    return(

    <div className="Life">
         <h1 className="life-heading">Life.</h1>
      <div className="card">
       <h1 className="heading">{this.state.advice}</h1>
       <button className="button" onClick={this.fetchAdvice}>
         <span> GIVE  ME ADVICE</span>
       </button>
</div>
 </div>

    );
  }
}
